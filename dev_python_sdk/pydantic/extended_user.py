# coding: utf-8

"""
    Forem API V1

    Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from dev_python_sdk.pydantic.extended_user_badge_ids import ExtendedUserBadgeIds

class ExtendedUser(BaseModel):
    summary: typing.Optional[typing.Optional[str]] = Field(None, alias='summary')

    type_of: typing.Optional[str] = Field(None, alias='type_of')

    id: typing.Optional[int] = Field(None, alias='id')

    username: typing.Optional[str] = Field(None, alias='username')

    name: typing.Optional[str] = Field(None, alias='name')

    twitter_username: typing.Optional[str] = Field(None, alias='twitter_username')

    github_username: typing.Optional[str] = Field(None, alias='github_username')

    # Email (if user allows displaying email on their profile) or nil
    email: typing.Optional[typing.Optional[str]] = Field(None, alias='email')

    website_url: typing.Optional[typing.Optional[str]] = Field(None, alias='website_url')

    location: typing.Optional[typing.Optional[str]] = Field(None, alias='location')

    joined_at: typing.Optional[str] = Field(None, alias='joined_at')

    profile_image: typing.Optional[str] = Field(None, alias='profile_image')

    badge_ids: typing.Optional[ExtendedUserBadgeIds] = Field(None, alias='badge_ids')
    class Config:
        arbitrary_types_allowed = True
