# coding: utf-8

"""
    Forem API V1

    Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from dev_python_sdk.pydantic.article_flare_tag import ArticleFlareTag
from dev_python_sdk.pydantic.article_index_tag_list import ArticleIndexTagList
from dev_python_sdk.pydantic.shared_organization import SharedOrganization
from dev_python_sdk.pydantic.shared_user import SharedUser

class ArticleIndex(BaseModel):
    tags: str = Field(alias='tags')

    title: str = Field(alias='title')

    description: str = Field(alias='description')

    type_of: str = Field(alias='type_of')

    id: int = Field(alias='id')

    cover_image: typing.Optional[str] = Field(alias='cover_image')

    readable_publish_date: str = Field(alias='readable_publish_date')

    social_image: str = Field(alias='social_image')

    tag_list: ArticleIndexTagList = Field(alias='tag_list')

    slug: str = Field(alias='slug')

    path: str = Field(alias='path')

    url: str = Field(alias='url')

    canonical_url: str = Field(alias='canonical_url')

    positive_reactions_count: int = Field(alias='positive_reactions_count')

    public_reactions_count: int = Field(alias='public_reactions_count')

    created_at: datetime = Field(alias='created_at')

    edited_at: typing.Optional[datetime] = Field(alias='edited_at')

    crossposted_at: typing.Optional[datetime] = Field(alias='crossposted_at')

    published_at: datetime = Field(alias='published_at')

    last_comment_at: datetime = Field(alias='last_comment_at')

    # Crossposting or published date time
    published_timestamp: datetime = Field(alias='published_timestamp')

    # Reading time, in minutes
    reading_time_minutes: int = Field(alias='reading_time_minutes')

    user: SharedUser = Field(alias='user')

    flare_tag: typing.Optional[ArticleFlareTag] = Field(None, alias='flare_tag')

    organization: typing.Optional[SharedOrganization] = Field(None, alias='organization')
    class Config:
        arbitrary_types_allowed = True
