# coding: utf-8

"""
    Forem API V1

    Access Forem articles, users and other resources via API.         For a real-world example of Forem in action, check out [DEV](https://www.dev.to).         All endpoints can be accessed with the 'api-key' header and a accept header, but         some of them are accessible publicly without authentication.          Dates and date times, unless otherwise specified, must be in         the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Organization(BaseModel):
    summary: typing.Optional[str] = Field(None, alias='summary')

    type_of: typing.Optional[str] = Field(None, alias='type_of')

    username: typing.Optional[str] = Field(None, alias='username')

    name: typing.Optional[str] = Field(None, alias='name')

    twitter_username: typing.Optional[str] = Field(None, alias='twitter_username')

    github_username: typing.Optional[str] = Field(None, alias='github_username')

    url: typing.Optional[str] = Field(None, alias='url')

    location: typing.Optional[str] = Field(None, alias='location')

    joined_at: typing.Optional[str] = Field(None, alias='joined_at')

    tech_stack: typing.Optional[str] = Field(None, alias='tech_stack')

    tag_line: typing.Optional[typing.Optional[str]] = Field(None, alias='tag_line')

    story: typing.Optional[typing.Optional[str]] = Field(None, alias='story')
    class Config:
        arbitrary_types_allowed = True
